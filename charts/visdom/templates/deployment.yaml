apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    # The "heritage" label is used to track which tool deployed a given chart.
    # It is useful for admins who want to see what releases a particular tool
    # is responsible for.
    heritage: {{ .Release.Service }}
    # The "release" convention makes it easy to tie a release to all of the
    # Kubernetes resources that were created as part of that release.
    release: {{ .Release.Name }}
    # This makes it easy to audit chart usage.
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
{{- if .Values.podAnnotations }}
      # Allows custom annotations to be specified
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.container.image }}
          imagePullPolicy: {{ .Values.container.pullPolicy }}
          {{- if .Values.container.envs }}
          env:
          {{- with .Values.container.envs }}
          - name: PORT
            value: {{ .port | default "8097" | quote }}
          - name: ENV_PATH
            value: {{ .env_path | default "~/.visdom/" | quote }}
          - name: LOGGING_LEVEL
            value: {{ .logging_level | default "INFO" | quote }}
          {{- end }}
          {{- end }}
          ports:
          - name: http
            containerPort: {{ .Values.container.envs.port }}
            protocol: TCP
          readinessProbe:
            tcpSocket:
              port: {{ .Values.container.envs.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: {{ .Values.container.envs.port }}
            initialDelaySeconds: 15
            periodSeconds: 20
{{- if .Values.persistence.enabled}}
          volumeMounts:
            - mountPath: {{ .Values.container.envs.env_path }}
              name: {{ .Chart.Name }}
{{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
{{- if .Values.persistence.enabled}}
      volumes:
        - name: {{ .Chart.Name }}
      {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Chart.Name }}
      {{- else }}
          emptyDir: {}
      {{- end -}}
{{- end }}